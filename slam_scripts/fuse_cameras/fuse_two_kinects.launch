
<launch>
   
  <!-- Multi-cameras demo with 2 Kinects -->
		
  <arg name="record" default="true" />
  <arg name="record_prefix" default="two_kinectv1" />

  <arg name="playback" default="false" />
  <arg name="playback_file" default="" />
  <arg name="change_tf" default="true" />
  <param name="use_sim_time" value="$(arg playback)" />

	<!-- <param name="use_sim_time" value="true" if="$(arg playback)" /> -->
   
  <!-- Cameras -->
  <include unless="$(arg playback)" file="$(find freenect_launch)/launch/freenect.launch">
    <arg name="depth_registration" value="true" />
    <arg name="camera" value="camera1" />
    <arg name="device_id" value="B00363716224036B" />
	<arg name="rgb_processing" value="true" /> 
    <arg name="ir_processing" value="false" /> 
    <arg name="depth_processing" value="false" /> 
    <arg name="depth_registered_processing" value="true" /> 
    <arg name="disparity_processing" value="false" /> 
    <arg name="disparity_registered_processing" value="false" /> 
    <arg name="sw_registered_processing" value="false" /> 
    <arg name="hw_registered_processing" value="true" /> 
  </include>

  <include unless="$(arg playback)" file="$(find freenect_launch)/launch/freenect.launch">
    <arg name="depth_registration" value="true" />
    <arg name="camera" value="camera2" />
    <arg name="device_id" value="A70775X05624228A" />
	<arg name="rgb_processing" value="true" /> 
    <arg name="ir_processing" value="false" /> 
    <arg name="depth_processing" value="false" /> 
    <arg name="depth_registered_processing" value="true" /> 
    <arg name="disparity_processing" value="false" /> 
    <arg name="disparity_registered_processing" value="false" /> 
    <arg name="sw_registered_processing" value="false" /> 
    <arg name="hw_registered_processing" value="true" /> 
  </include>
  
	<!-- Recording data to .bag file -->
  <node pkg="rosbag" type="record" name="rosbag_record_two_kinectv1"
	  args="-o $(arg record_prefix)
	  	/tf
		/tf_static
		/camera1/rgb/camera_info
		/camera1/rgb/image_rect_color/compressed
		/camera1/depth_registered/camera_info
		/camera1/depth_registered/image_raw
		/camera2/rgb/camera_info
		/camera2/rgb/image_rect_color/compressed
		/camera2/depth_registered/camera_info
		/camera2/depth_registered/image_raw"
	if="$(arg record)" />
		
	<!--
		/camera1/rgbd_image
		/camera1/rgbd_image/compressed
		/camera2/rgbd_image
		/camera2/rgbd_image/compressed
	-->

	<!-- Transformation and rotation between the two cameras -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera1_tf"
      args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /camera1_link 100" if="$(arg change_tf)" >
  </node>

  <node pkg="tf" type="static_transform_publisher" name="base_to_camera2_tf"
	  args="-.0745271669450724 -.22035212607998148 -.00538525490684241 -1.091365 0.026006 -.031799  /base_link /camera2_link 100" if="$(arg change_tf)" >
  </node>
  
  <!--
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera2_tf"
	  args="-.0745271669450724 -.22035212607998148 -.00538525490684241  -1.037018798613629 0.04602159313627843 -0.030344447349630856   /base_link /camera2_link 100" if="$(arg change_tf)" >
  </node>
  -->

  <!--
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera2_tf"
	  args="-0.13496362 -0.24565362 0.0081254  -1.037018798613629 0.04602159313627843 -0.030344447349630856   /base_link /camera2_link 100" if="$(arg change_tf)" >
  </node>
  -->


   
   <!-- sync rgb/depth images per camera -->

   <group ns="camera1" unless="$(arg playback)">
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="load rtabmap_ros/rgbd_sync camera1_nodelet_manager">
      <remap from="rgb/image"       to="rgb/image_rect_color"/>
      <remap from="depth/image"     to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="rgb/camera_info"/>
    </node>
   </group>
   <group ns="camera2" unless="$(arg playback)">
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="load rtabmap_ros/rgbd_sync camera2_nodelet_manager">
      <remap from="rgb/image"       to="rgb/image_rect_color"/>
      <remap from="depth/image"     to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="rgb/camera_info"/>
    </node>
   </group>

    <group ns="camera1" if="$(arg playback)">
			<node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync">
				<remap from="rgb/image"       to="rgb/image_rect_color"/>
				<remap from="depth/image"     to="depth_registered/image_raw"/>
				<remap from="rgb/camera_info" to="rgb/camera_info"/>
			</node>
   </group>
   <group ns="camera2" if="$(arg playback)">
			<node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync">
				<remap from="rgb/image"       to="rgb/image_rect_color"/>
				<remap from="depth/image"     to="depth_registered/image_raw"/>
				<remap from="rgb/camera_info" to="rgb/camera_info"/>
			</node>
   </group>




  <!--   Fuse depth maps   -->


  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_camera3_tf"
	  args="-0.200 0.100 -0.004 -2.000 -0.032 -1.597 /base_link /camera3_frame" >
  </node>



  <!-- Nodelet manager for this pipeline -->
  <node pkg="nodelet" type="nodelet" args="manager"
        name="record_player_manager" output="screen"/>



  <!-- Convert depth map to a point cloud -->
  <node pkg="nodelet" type="nodelet" name="cloudify1"
        args="load depth_image_proc/point_cloud_xyz record_player_manager --no-bond">
    <remap from="camera_info" to="camera1/depth_registered/camera_info"/>
    <remap from="image_rect" to="camera1/depth_registered/image_raw"/>
    <remap from="points" to="points1"/>
  </node>

  <!-- Convert depth map to a point cloud -->
  <node pkg="nodelet" type="nodelet" name="cloudify2"
        args="load depth_image_proc/point_cloud_xyz record_player_manager --no-bond">
    <remap from="camera_info" to="camera2/depth_registered/camera_info"/>
    <remap from="image_rect" to="camera2/depth_registered/image_raw"/>
    <remap from="points" to="points2"/>
  </node>


  <node pkg="pcl_fuse" type="pcl_fuse" name="merge_clouds" output="screen">
    <remap from="/depth1_info" to="/camera1/depth_registered/camera_info"/>
  </node>





</launch>
